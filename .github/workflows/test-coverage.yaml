on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

name: test-coverage

jobs:
  test-coverage:
    runs-on: ubuntu-20.04
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-r@v1

      - uses: r-lib/actions/setup-pandoc@v1

      - name: Query dependencies
        run: |
          install.packages('remotes')
          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
          writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install system dependencies
        if: runner.os == 'Linux'
        run: |

          while read -r cmd
          do
            eval sudo $cmd
          done < <(Rscript -e 'writeLines(remotes::system_requirements("ubuntu", "20.04"))')
          sudo apt-get update && sudo apt-get install -y libcurl4-openssl-dev

      - name: Install dependencies
        run: |
          remotes::install_deps(dependencies = TRUE)
          remotes::install_cran("covr")
        shell: Rscript {0}

      - name: Start SeaweedFS
        if: runner.os == 'Linux'
        run: ./scripts/seaweed start

      - name: Start Redis
        if: runner.os != 'Windows'
        uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: "4.x"

      - name: Create free space
        if: runner.os == 'Linux'
        run: |
          # Workaround to provide additional free space for testing.
          # We need this because otherwise SeaweedFS runs out of space
          # and builds run until they time out
          # https://github.com/actions/virtual-environments/issues/2840
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /opt/ghc
          sudo rm -rf "/usr/local/share/boost"
          sudo rm -rf "$AGENT_TOOLSDIRECTORY"

      - name: Test coverage
        run: covr::codecov()
        shell: Rscript {0}
